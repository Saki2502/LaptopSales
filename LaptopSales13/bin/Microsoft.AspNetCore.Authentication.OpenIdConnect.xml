<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Authentication.OpenIdConnect</name>
    </assembly>
    <members>
        <member name="F:Microsoft.Extensions.Internal.TaskCache.CompletedTask">
            <summary>
            A <see cref="T:System.Threading.Tasks.Task"/> that's already completed successfully.
            </summary>
            <remarks>
            We're caching this in a static readonly field to make it more inlinable and avoid the volatile lookup done
            by <c>Task.CompletedTask</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.Internal.TaskCache`1.DefaultCompletedTask">
            <summary>
            Gets a completed <see cref="T:System.Threading.Tasks.Task"/> with the value of <c>default(T)</c>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.OpenIdConnectAppBuilderExtensions">
            <summary>
            Extension methods to add OpenID Connect authentication capabilities to an HTTP application pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.OpenIdConnectAppBuilderExtensions.UseOpenIdConnectAuthentication(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware"/> middleware to the specified <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>, which enables OpenID Connect authentication capabilities.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to add the middleware to.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.OpenIdConnectAppBuilderExtensions.UseOpenIdConnectAuthentication(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.OpenIdConnectOptions)">
            <summary>
            Adds the <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware"/> middleware to the specified <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>, which enables OpenID Connect authentication capabilities.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to add the middleware to.</param>
            <param name="options">A <see cref="T:Microsoft.AspNetCore.Builder.OpenIdConnectOptions"/> that specifies options for the middleware.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.OpenIdConnectOptions">
            <summary>
            Configuration options for <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.#ctor">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Builder.OpenIdConnectOptions"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Builder.OpenIdConnectOptions"/>
            </summary>
            <remarks>
            Defaults:
            <para>AddNonceToRequest: true.</para>
            <para>BackchannelTimeout: 1 minute.</para>
            <para>Caption: <see cref="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.Caption"/>.</para>
            <para>ProtocolValidator: new <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator"/>.</para>
            <para>RefreshOnIssuerKeyNotFound: true</para>
            <para>ResponseType: <see cref="F:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectResponseType.CodeIdToken"/></para>
            <para>Scope: <see cref="F:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectScope.OpenIdProfile"/>.</para>
            <para>TokenValidationParameters: new <see cref="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters"/> with AuthenticationScheme = authenticationScheme.</para>
            <para>UseTokenLifetime: false.</para>
            </remarks>
            <param name="authenticationScheme"> will be used to when creating the <see cref="T:System.Security.Claims.ClaimsIdentity"/> for the AuthenticationScheme property.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Authority">
            <summary>
            Gets or sets the Authority to use when making OpenIdConnect calls.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientId">
            <summary>
            Gets or sets the 'client_id'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientSecret">
            <summary>
            Gets or sets the 'client_secret'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Configuration">
            <summary>
            Configuration provided directly by the developer. If provided, then MetadataAddress and the Backchannel properties
            will not be used. This information should not be updated during request processing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ConfigurationManager">
            <summary>
            Responsible for retrieving, caching, and refreshing the configuration from metadata.
            If not provided, then one will be created using the MetadataAddress and Backchannel properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.GetClaimsFromUserInfoEndpoint">
            <summary>
            Boolean to set whether the middleware should go to user info endpoint to retrieve additional claims or not after creating an identity from id_token received from token endpoint.
            The default is 'false'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RequireHttpsMetadata">
            <summary>
            Gets or sets if HTTPS is required for the metadata address or authority.
            The default is true. This should be disabled only in development environments.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.MetadataAddress">
            <summary>
            Gets or sets the discovery endpoint for obtaining metadata
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Events">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents"/> to notify when processing OpenIdConnect messages.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ProtocolValidator">
            <summary>
            Gets or sets the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator"/> that is used to ensure that the 'id_token' received
            is valid per: http://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation 
            </summary>
            <exception cref="T:System.ArgumentNullException">if 'value' is null.</exception>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SignedOutCallbackPath">
            <summary>
            The request path within the application's base path where the user agent will be returned after sign out from the identity provider.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.PostLogoutRedirectUri">
            <summary>
            The uri where the user agent will be returned to after application is signed out from the identity provider.
            The redirect will happen after the SignedOutCallbackPath is invoked.
            </summary>
            <remarks>This URI can be out of the application's domain. By default it points to the root.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RefreshOnIssuerKeyNotFound">
            <summary>
            Gets or sets if a metadata refresh should be attempted after a SecurityTokenSignatureKeyNotFoundException. This allows for automatic
            recovery in the event of a signature key rollover. This is enabled by default.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.AuthenticationMethod">
            <summary>
            Gets or sets the method used to redirect the user agent to the identity provider.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Resource">
            <summary>
            Gets or sets the 'resource'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseMode">
            <summary>
            Gets or sets the 'response_mode'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseType">
            <summary>
            Gets or sets the 'response_type'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Scope">
            <summary>
            Gets the list of permissions to request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RemoteSignOutPath">
            <summary>
            Requests received on this path will cause the middleware to invoke SignOut using the SignInScheme.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SignOutScheme">
            <summary>
            The Authentication Scheme to use with SignOut on the SignOutPath. SignInScheme will be used if this
            is not set.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StateDataFormat">
            <summary>
            Gets or sets the type used to secure data handled by the middleware.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StringDataFormat">
            <summary>
            Gets or sets the type used to secure strings used by the middleware.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SecurityTokenValidator">
            <summary>
            Gets or sets the <see cref="T:Microsoft.IdentityModel.Tokens.ISecurityTokenValidator"/> used to validate identity tokens.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters">
            <summary>
            Gets or sets the parameters used to validate identity tokens.
            </summary>
            <remarks>Contains the types and definitions required for validating a token.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.UseTokenLifetime">
            <summary>
            Indicates that the authentication session lifetime (e.g. cookies) should match that of the authentication token.
            If the token does not provide lifetime information then normal session lifetimes will be used.
            This is disabled by default.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SkipUnrecognizedRequests">
            <summary>
            Indicates if requests to the CallbackPath may also be for other components. If enabled the middleware will pass
            requests through that do not contain OpenIdConnect authentication responses. Disabling this and setting the
            CallbackPath to a dedicated endpoint may provide better error handling.
            This is disabled by default.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults">
            <summary>
            Default values related to OpenIdConnect authentication middleware
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.AuthenticationPropertiesKey">
            <summary>
            Constant used to identify state in openIdConnect protocol message.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.AuthenticationScheme">
            <summary>
            The default value used for OpenIdConnectOptions.AuthenticationScheme.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.Caption">
            <summary>
            The default value for OpenIdConnectOptions.Caption.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.CookieNoncePrefix">
            <summary>
            The prefix used to for the nonce in the cookie.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.RedirectUriForCodePropertiesKey">
            <summary>
            The property for the RedirectUri that was used when asking for a 'authorizationCode'.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.UserstatePropertiesKey">
            <summary>
            Constant used to identify userstate inside AuthenticationProperties that have been serialized in the 'state' parameter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler">
            <summary>
            A per-request authentication handler for the OpenIdConnectAuthenticationMiddleware.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)">
            <summary>
            Redirect user to the identity provider for sign out
            </summary>
            <returns>A task executing the sign out procedure</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutCallbackAsync">
            <summary>
            Response to the callback from OpenId provider after session ended.
            </summary>
            <returns>A task executing the callback procedure</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)">
            <summary>
            Responds to a 401 Challenge. Sends an OpenIdConnect message to the 'identity authority' to obtain an identity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync">
            <summary>
            Invoked to process incoming OpenIdConnect messages.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationTicket"/> if successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Redeems the authorization code for tokens at the token endpoint.
            </summary>
            <param name="tokenEndpointRequest">The request that will be sent to the token endpoint and is available for customization.</param>
            <returns>OpenIdConnect message that has tokens inside it.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage,System.IdentityModel.Tokens.Jwt.JwtSecurityToken,Microsoft.AspNetCore.Authentication.AuthenticationTicket)">
            <summary>
            Goes to UserInfo endpoint to retrieve additional claims and add any unique claims to the given identity.
            </summary>
            <param name="message">message that is being processed</param>
            <param name="jwt">The <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken"/>.</param>
            <param name="ticket">authentication ticket with claims principal and identities</param>
            <returns>Authentication ticket with identity with additional claims, if any.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.SaveTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Save the tokens contained in the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> in the <see cref="T:System.Security.Claims.ClaimsPrincipal"/>.
            </summary>
            <param name="properties">The <see cref="T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties"/> in which tokens are saved.</param>
            <param name="message">The OpenID Connect response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.WriteNonceCookie(System.String)">
            <summary>
            Adds the nonce to <see cref="P:Microsoft.AspNetCore.Http.HttpResponse.Cookies"/>.
            </summary>
            <param name="nonce">the nonce to remember.</param>
            <remarks><see cref="M:IResponseCookies.Append"/> of <see cref="P:Microsoft.AspNetCore.Http.HttpResponse.Cookies"/> is called to add a cookie with the name: 'OpenIdConnectAuthenticationDefaults.Nonce + <see cref="M:ISecureDataFormat{TData}.Protect"/>(nonce)' of <see cref="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StringDataFormat"/>.
            The value of the cookie is: "N".</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.ReadNonceCookie(System.String)">
            <summary>
            Searches <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Cookies"/> for a matching nonce.
            </summary>
            <param name="nonce">the nonce that we are looking for.</param>
            <returns>echos 'nonce' if a cookie is found that matches, null otherwise.</returns>
            <remarks>Examine <see cref="P:Microsoft.AspNetCore.Http.IRequestCookieCollection.Keys"/> of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Cookies"/> that start with the prefix: 'OpenIdConnectAuthenticationDefaults.Nonce'. 
            <see cref="M:ISecureDataFormat{TData}.Unprotect"/> of <see cref="P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StringDataFormat"/> is used to obtain the actual 'nonce'. If the nonce is found, then <see cref="M:IResponseCookies.Delete"/> of <see cref="P:Microsoft.AspNetCore.Http.HttpResponse.Cookies"/> is called.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.BuildRedirectUriIfRelative(System.String)">
            <summary>
            Build a redirect path if the given path is a relative path.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware">
            <summary>
            ASP.NET Core middleware for obtaining identities using OpenIdConnect protocol.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authentication.SharedAuthenticationOptions},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Builder.OpenIdConnectOptions},System.Text.Encodings.Web.HtmlEncoder)">
            <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware"/>
            </summary>
            <param name="next">The next middleware in the middleware pipeline to invoke.</param>
            <param name="dataProtectionProvider"> provider for creating a data protector.</param>
            <param name="loggerFactory">factory for creating a <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="encoder"></param>
            <param name="services"></param>
            <param name="sharedOptions"></param>
            <param name="options"></param>
            <param name="htmlEncoder">The <see cref="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware.HtmlEncoder"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware.CreateHandler">
            <summary>
            Provides the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1"/> object for processing authentication-related requests.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1"/> configured with the <see cref="T:Microsoft.AspNetCore.Builder.OpenIdConnectOptions"/> supplied to the constructor.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectRedirectBehavior">
            <summary>
            Lists the different authentication methods used to
            redirect the user agent to the identity provider.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectRedirectBehavior.RedirectGet">
            <summary>
            Emits a 302 response to redirect the user agent to
            the OpenID Connect provider using a GET request.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectRedirectBehavior.FormPost">
            <summary>
            Emits an HTML form to redirect the user agent to
            the OpenID Connect provider using a POST request.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext">
            <summary>
            This Context can be used to be informed when an 'AuthorizationCode' is received over the OpenIdConnect protocol.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Builder.OpenIdConnectOptions)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken"/> that was received in the authentication response, if any.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointRequest">
            <summary>
            The request that will be sent to the token endpoint and is available for customization.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Backchannel">
            <summary>
            The configured communication channel to the identity provider for use when making custom requests to the token endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointResponse">
            <summary>
            If the developer chooses to redeem the code themselves then they can provide the resulting tokens here. This is the
            same as calling HandleCodeRedemption. If set then the middleware will not attempt to redeem the code. An IdToken
            is required if one had not been previously received in the authorization response. An access token is optional
            if the middleware is to contact the user-info endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandledCodeRedemption">
            <summary>
            Indicates if the developer choose to handle (or skip) the code redemption. If true then the middleware will not attempt
            to redeem the code. See HandleCodeRedemption and TokenEndpointResponse.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption">
            <summary>
            Tells the middleware to skip the code redemption process. The developer may have redeemed the code themselves, or
            decided that the redemption was not required. If tokens were retrieved that are needed for further processing then
            call one of the overloads that allows providing tokens. An IdToken is required if one had not been previously received
            in the authorization response. An access token can optionally be provided for the middleware to contact the
            user-info endpoint. Calling this is the same as setting TokenEndpointResponse.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(System.String,System.String)">
            <summary>
            Tells the middleware to skip the code redemption process. The developer may have redeemed the code themselves, or
            decided that the redemption was not required. If tokens were retrieved that are needed for further processing then
            call one of the overloads that allows providing tokens. An IdToken is required if one had not been previously received
            in the authorization response. An access token can optionally be provided for the middleware to contact the
            user-info endpoint. Calling this is the same as setting TokenEndpointResponse.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Tells the middleware to skip the code redemption process. The developer may have redeemed the code themselves, or
            decided that the redemption was not required. If tokens were retrieved that are needed for further processing then
            call one of the overloads that allows providing tokens. An IdToken is required if one had not been previously received
            in the authorization response. An access token can optionally be provided for the middleware to contact the
            user-info endpoint. Calling this is the same as setting TokenEndpointResponse.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents">
            <summary>
            Specifies events which the <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware" />invokes to enable developer control over the authentication process.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.AuthenticationFailed(Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthenticationFailedContext)">
            <summary>
            Invoked if exceptions are thrown during request processing. The exceptions will be re-thrown after this event unless suppressed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.AuthorizationCodeReceived(Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext)">
            <summary>
            Invoked after security token validation if an authorization code is present in the protocol message.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.MessageReceived(Microsoft.AspNetCore.Authentication.OpenIdConnect.MessageReceivedContext)">
            <summary>
            Invoked when a protocol message is first received.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.RedirectToIdentityProvider(Microsoft.AspNetCore.Authentication.OpenIdConnect.RedirectContext)">
            <summary>
            Invoked before redirecting to the identity provider to authenticate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.RedirectToIdentityProviderForSignOut(Microsoft.AspNetCore.Authentication.OpenIdConnect.RedirectContext)">
            <summary>
            Invoked before redirecting to the identity provider to sign out.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.RemoteSignOut(Microsoft.AspNetCore.Authentication.OpenIdConnect.RemoteSignOutContext)">
            <summary>
            Invoked when a request is received on the RemoteSignOutPath.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.TokenResponseReceived(Microsoft.AspNetCore.Authentication.OpenIdConnect.TokenResponseReceivedContext)">
            <summary>
            Invoked after "authorization code" is redeemed for tokens at the token endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.TokenValidated(Microsoft.AspNetCore.Authentication.OpenIdConnect.TokenValidatedContext)">
            <summary>
            Invoked when an IdToken has been validated and produced an AuthenticationTicket.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents.UserInformationReceived(Microsoft.AspNetCore.Authentication.OpenIdConnect.UserInformationReceivedContext)">
            <summary>
            Invoked when user information is retrieved from the UserInfoEndpoint.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.MessageReceivedContext.Token">
            <summary>
            Bearer Token. This will give application an opportunity to retrieve token from an alternation location.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents">
            <summary>
            Specifies events which the <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware" />invokes to enable developer control over the authentication process.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnAuthenticationFailed">
            <summary>
            Invoked if exceptions are thrown during request processing. The exceptions will be re-thrown after this event unless suppressed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnAuthorizationCodeReceived">
            <summary>
            Invoked after security token validation if an authorization code is present in the protocol message.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnMessageReceived">
            <summary>
            Invoked when a protocol message is first received.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnRedirectToIdentityProvider">
            <summary>
            Invoked before redirecting to the identity provider to authenticate.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnRedirectToIdentityProviderForSignOut">
            <summary>
            Invoked before redirecting to the identity provider to sign out.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnRemoteSignOut">
            <summary>
            Invoked when a request is received on the RemoteSignOutPath.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnTokenResponseReceived">
            <summary>
            Invoked after "authorization code" is redeemed for tokens at the token endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnTokenValidated">
            <summary>
            Invoked when an IdToken has been validated and produced an AuthenticationTicket.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectEvents.OnUserInformationReceived">
            <summary>
            Invoked when user information is retrieved from the UserInfoEndpoint.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.RedirectContext">
            <summary>
            When a user configures the <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware"/> to be notified prior to redirecting to an IdentityProvider
            an instance of <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.RedirectContext"/> is passed to the 'RedirectToAuthenticationEndpoint' or 'RedirectToEndSessionEndpoint' events.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.TokenResponseReceivedContext">
            <summary>
            This Context can be used to be informed when an 'AuthorizationCode' is redeemed for tokens at the token endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.TokenResponseReceivedContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Builder.OpenIdConnectOptions,Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.TokenResponseReceivedContext"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.TokenResponseReceivedContext.TokenEndpointResponse">
            <summary>
            Gets or sets the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> that contains the tokens received after redeeming the code at the token endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.TokenValidatedContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Builder.OpenIdConnectOptions)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Authentication.OpenIdConnect.TokenValidatedContext"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.MessageStateIsNullOrEmpty">
            <summary>
            OpenIdConnectAuthenticationHandler: message.State is null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.FormatMessageStateIsNullOrEmpty">
            <summary>
            OpenIdConnectAuthenticationHandler: message.State is null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.MessageStateIsInvalid">
            <summary>
            Unable to unprotect the message.State.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.FormatMessageStateIsInvalid">
            <summary>
            Unable to unprotect the message.State.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.MessageContainsError">
            <summary>
            Message contains error: '{0}', error_description: '{1}', error_uri: '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.FormatMessageContainsError(System.Object,System.Object,System.Object)">
            <summary>
            Message contains error: '{0}', error_description: '{1}', error_uri: '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.ValidatedSecurityTokenNotJwt">
            <summary>
            The Validated Security Token must be of type JwtSecurityToken, but instead its type is: '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.FormatValidatedSecurityTokenNotJwt(System.Object)">
            <summary>
            The Validated Security Token must be of type JwtSecurityToken, but instead its type is: '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.UnableToValidateToken">
            <summary>
            Unable to validate the 'id_token', no suitable ISecurityTokenValidator was found for: '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.FormatUnableToValidateToken(System.Object)">
            <summary>
            Unable to validate the 'id_token', no suitable ISecurityTokenValidator was found for: '{0}'."
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.IdTokenCodeMissing">
            <summary>
            Cannot process the message. Both id_token and code are missing.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.OpenIdConnect.Resources.FormatIdTokenCodeMissing">
            <summary>
            Cannot process the message. Both id_token and code are missing.
            </summary>
        </member>
    </members>
</doc>
